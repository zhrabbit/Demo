<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	 xmlns:jaxws="http://cxf.apache.org/jaxws"
	 xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
     	 http://www.springframework.org/schema/tx 
		 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		 http://www.springframework.org/schema/aop 
		 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		 http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
	
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass"
			value="org.postgresql.Driver">
		</property>
		<property name="jdbcUrl"
			value="jdbc:postgresql://localhost:5432/TrainProject">
		</property>
	</bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- Hibernate 事务管理  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean> 

	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
		<tx:attributes>  
			<!-- 事务的传播特性 -->
			<tx:method name="save*" propagation="REQUIRED" />  
        	<tx:method name="add*" propagation="REQUIRED" />  
       		<tx:method name="create*" propagation="REQUIRED" />  
        	<tx:method name="insert*" propagation="REQUIRED" />  
        	<tx:method name="update*" propagation="REQUIRED" />  
        	<tx:method name="merge*" propagation="REQUIRED" />  
        	<tx:method name="del*" propagation="REQUIRED" />  
        	<tx:method name="remove*" propagation="REQUIRED" />  
        	<tx:method name="put*" propagation="REQUIRED" />  
        	<tx:method name="use*" propagation="REQUIRED"/>
        	<!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
        	<tx:method name="read*" propagation="REQUIRED" read-only="true" />    
        	<tx:method name="set*" propagation="REQUIRED" read-only="true" />  
        	<tx:method name="get*" propagation="REQUIRED" read-only="true" />  
        	<tx:method name="count*" propagation="REQUIRED" read-only="true" />  
        	<tx:method name="find*" propagation="REQUIRED" read-only="true" />  
        	<tx:method name="list*" propagation="REQUIRED" read-only="true" />  
        	<tx:method name="convert*" propagation="REQUIRED" read-only="true" />  
        	<tx:method name="*" read-only="true" />
		</tx:attributes>  
	</tx:advice>
	<aop:config expose-proxy="true">
		<!-- 哪些类哪些方法使用事务 --> 
		<aop:pointcut id="txPointcut" expression="execution(* com.yunfan.*.service.impl.*.*(..))" />
		<aop:pointcut id="txPointcut2" expression="execution(* com.yunfan.*.adapter.*.*(..))" />
		<aop:pointcut id="txPointcut3" expression="execution(* com.yunfan.*.service.impl.*.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut2"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut3"/>
	</aop:config> 
	
	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
	
	<!-- DAOs -->
	<bean id="dictionaryDao" class="com.yunfan.trainproject.dao.DictionaryDAO" scope="prototype"/>
	<bean id="componyDao" class="com.yunfan.trainproject.dao.ComponyDAO" scope="prototype"/>
	<bean id="naviTreeDao" class="com.yunfan.trainproject.dao.NaviTreeDAO" scope="prototype"/>
	
	<!-- Services -->
	<bean id="dictionaryService" class="com.yunfan.trainproject.service.impl.DictionaryService" init-method="init">
	</bean>
	<bean id="componyService" class="com.yunfan.trainproject.service.impl.ComponyService" init-method="init">
	</bean>
	<bean id="naviTreeService" class="com.yunfan.trainproject.service.impl.NaviTreeService" init-method="init">
	</bean>
	
	<!-- Adapters -->
	<bean id="dictionaryAdapter" class="com.yunfan.trainproject.adapter.DictionaryAdapter"/>
	<bean id="componyAdapter" class="com.yunfan.trainproject.adapter.ComponyAdapter"/>
	<bean id="naviTreeAdapter" class="com.yunfan.trainproject.adapter.NaviTreeAdapter"/>
	
	<!-- Actions -->
	
	<!-- spring工具类 -->
	<bean id="SpringContextHolder" class="com.yunfan.mdk.context.SpringContextHolder" />

 </beans>